% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preCluster.R
\name{preCluster}
\alias{preCluster}
\title{Extract decisions from a model and create bootstrap resamples.}
\usage{
preCluster(
  model,
  model_type,
  data,
  target,
  times = 10,
  p = 0.5,
  sample_weight = NULL,
  classPos = NULL,
  ntree = "all",
  maxdepth = Inf,
  dummy_var = NULL,
  discretize = FALSE,
  K = 2,
  mode = "data",
  seed = 0,
  in_parallel = FALSE,
  n_cores = detectCores() - 1
)
}
\arguments{
\item{model}{model to extract rules from.}

\item{model_type}{character string: 'RF', 'random forest', 'rf', 'xgboost', 'XGBOOST', 'xgb', 'XGB', 'ranger', 'Ranger', 'gbm' or 'GBM'.}

\item{data}{data with the same columns than data used to fit the model.}

\item{target}{response variable.}

\item{times}{number of bootstraps}

\item{p}{fraction of data to resample.}

\item{sample_weight}{numeric vector with the weights of samples for bootstrap resampling. For classification, if 2 values are given, the 1st one is assumed to be for the positive class (classpos argument).}

\item{classPos}{the positive class predicted by decisions}

\item{ntree}{number of trees to use from the model (default = all)}

\item{maxdepth}{maximal node depth to use for extracting rules (by default, full branches are used).}

\item{dummy_var}{if multiclass variables were transformed into dummy variables before fitting the model, one can pass their names in a vector here to avoid multiple levels to be used in a same rule (recommended).}

\item{discretize}{if TRUE, discretization is performed with K categories (discretizeDecisions, by default = FALSE).}

\item{in_parallel}{if TRUE, the function is run in parallel.}

\item{n_cores}{if in_parallel = TRUE, and no cluster has been passed: number of cores to use.}

\item{cluster}{the cluster to use to run the function in parallel.}
}
\value{
A list with the row numbers of partitioned data, the rules originally extracted from the model and new data if discretization was performed.
}
\description{
to run before bootstrapping on parallel with the clustermq package and model2DE_cluster function. Extracts decisions, optionally discretizes them. Creates data partitions for bootstrapping.
}
