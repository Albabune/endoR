% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model2DE.R
\name{model2DE}
\alias{model2DE}
\title{Extract a decision ensemble from a tree-based model, simplify it and creates an interaction network from it.}
\usage{
model2DE(
  model,
  model_type,
  data,
  target,
  ntree = "all",
  maxdepth = Inf,
  classPos = NULL,
  dummy_var = NULL,
  discretize = FALSE,
  Kmax = 2,
  features_ctg = NULL,
  prune = TRUE,
  maxDecay = 0.05,
  typeDecay = 2,
  aggregate_taxa = FALSE,
  taxa = NULL,
  type = "both",
  filter = TRUE,
  min_imp = 0.7,
  ntest = 100,
  exec = NULL,
  in_parallel = FALSE,
  n_cores = detectCores() - 1,
  cluster = NULL,
  light = FALSE
)
}
\arguments{
\item{model}{model to extract rules from.}

\item{model_type}{character string: 'RF', 'random forest', 'rf', 'xgboost', 'XGBOOST', 'xgb', 'XGB', 'ranger', 'Ranger', 'gbm' or 'GBM'.}

\item{data}{data with the same columns than data used to fit the model.}

\item{target}{response variable.}

\item{ntree}{number of trees to use from the model (default = all)}

\item{maxdepth}{maximal node depth to use for extracting rules (by default, full branches are used).}

\item{classPos}{the positive class predicted by decisions}

\item{dummy_var}{if multiclass variables were transformed into dummy variables before fitting the model, one can pass their names in a vector here to avoid multiple levels to be used in a same rule (recommended).}

\item{exec}{if decisions have already been extracted, datatable with a 'condition' column.}

\item{in_parallel}{if TRUE, the function is run in parallel}

\item{n_cores}{if in_parallel = TRUE, and no cluster has been passed: number of cores to use, default is detectCores() - 1}

\item{cluster}{the cluster to use to run the function in parallel}

\item{light}{if FALSE, returns all intermediary decision ensembles; default = TRUE}

\item{...}{arguments to be passed to pruneDecisions, discretizeDecisions, filterDecisions.}
}
\value{
A list with the final decision ensemble, if numeric variables were discretized in decisions, the discretized data, edges and nodes to make a network (plotNetwork and plotFeatures).
}
\description{
Wrapper function to extract rules from a tree based model. 
It automatically transforms multiclass predictive variables into dummy variables. 
Optionally discretizes numeric variables (see discretizeDecisions). Measures decisions and optionally prunes them. Finally, generates a network. 
Can be run in parallel.
}
